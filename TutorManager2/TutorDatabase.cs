#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="testdata")]
public partial class Testdata : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertClients(Clients instance);
  partial void UpdateClients(Clients instance);
  partial void DeleteClients(Clients instance);
  partial void InsertPaychecks(Paychecks instance);
  partial void UpdatePaychecks(Paychecks instance);
  partial void DeletePaychecks(Paychecks instance);
  partial void InsertPlaces(Places instance);
  partial void UpdatePlaces(Places instance);
  partial void DeletePlaces(Places instance);
  partial void InsertRoutes(Routes instance);
  partial void UpdateRoutes(Routes instance);
  partial void DeleteRoutes(Routes instance);
  partial void InsertSessions(Sessions instance);
  partial void UpdateSessions(Sessions instance);
  partial void DeleteSessions(Sessions instance);
  #endregion
	
	public Testdata(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public Testdata(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public Testdata(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public Testdata(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Clients> Clients
	{
		get
		{
			return this.GetTable<Clients>();
		}
	}
	
	public System.Data.Linq.Table<Paychecks> Paychecks
	{
		get
		{
			return this.GetTable<Paychecks>();
		}
	}
	
	public System.Data.Linq.Table<Places> Places
	{
		get
		{
			return this.GetTable<Places>();
		}
	}
	
	public System.Data.Linq.Table<Routes> Routes
	{
		get
		{
			return this.GetTable<Routes>();
		}
	}
	
	public System.Data.Linq.Table<Sessions> Sessions
	{
		get
		{
			return this.GetTable<Sessions>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute()]
public partial class Clients : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ClientID;
	
	private string _Name;
	
	private string _ParentName;
	
	private string _Email;
	
	private string _Phone;
	
	private string _Subjects;
	
	private System.Nullable<int> _PlaceID;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClientIDChanging(int value);
    partial void OnClientIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParentNameChanging(string value);
    partial void OnParentNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnSubjectsChanging(string value);
    partial void OnSubjectsChanged();
    partial void OnPlaceIDChanging(System.Nullable<int> value);
    partial void OnPlaceIDChanged();
    #endregion
	
	public Clients()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ClientID
	{
		get
		{
			return this._ClientID;
		}
		set
		{
			if ((this._ClientID != value))
			{
				this.OnClientIDChanging(value);
				this.SendPropertyChanging();
				this._ClientID = value;
				this.SendPropertyChanged("ClientID");
				this.OnClientIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentName", DbType="NVarChar(50)")]
	public string ParentName
	{
		get
		{
			return this._ParentName;
		}
		set
		{
			if ((this._ParentName != value))
			{
				this.OnParentNameChanging(value);
				this.SendPropertyChanging();
				this._ParentName = value;
				this.SendPropertyChanged("ParentName");
				this.OnParentNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(15)")]
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this.OnPhoneChanging(value);
				this.SendPropertyChanging();
				this._Phone = value;
				this.SendPropertyChanged("Phone");
				this.OnPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subjects", DbType="NVarChar(100)")]
	public string Subjects
	{
		get
		{
			return this._Subjects;
		}
		set
		{
			if ((this._Subjects != value))
			{
				this.OnSubjectsChanging(value);
				this.SendPropertyChanging();
				this._Subjects = value;
				this.SendPropertyChanged("Subjects");
				this.OnSubjectsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceID", DbType="Int")]
	public System.Nullable<int> PlaceID
	{
		get
		{
			return this._PlaceID;
		}
		set
		{
			if ((this._PlaceID != value))
			{
				this.OnPlaceIDChanging(value);
				this.SendPropertyChanging();
				this._PlaceID = value;
				this.SendPropertyChanged("PlaceID");
				this.OnPlaceIDChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute()]
public partial class Paychecks : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PaycheckID;
	
	private System.Nullable<System.DateTime> _Date;
	
	private System.Nullable<double> _Amount;
	
	private System.Nullable<double> _Net;
	
	private System.Nullable<double> _StateTax;
	
	private System.Nullable<double> _FederalTax;
	
	private System.Nullable<System.DateTime> _PeriodEnd;
	
	private EntitySet<Sessions> _Sessions;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaycheckIDChanging(int value);
    partial void OnPaycheckIDChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnAmountChanging(System.Nullable<double> value);
    partial void OnAmountChanged();
    partial void OnNetChanging(System.Nullable<double> value);
    partial void OnNetChanged();
    partial void OnStateTaxChanging(System.Nullable<double> value);
    partial void OnStateTaxChanged();
    partial void OnFederalTaxChanging(System.Nullable<double> value);
    partial void OnFederalTaxChanged();
    partial void OnPeriodEndChanging(System.Nullable<System.DateTime> value);
    partial void OnPeriodEndChanged();
    #endregion
	
	public Paychecks()
	{
		this._Sessions = new EntitySet<Sessions>(new Action<Sessions>(this.attach_Sessions), new Action<Sessions>(this.detach_Sessions));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaycheckID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int PaycheckID
	{
		get
		{
			return this._PaycheckID;
		}
		set
		{
			if ((this._PaycheckID != value))
			{
				this.OnPaycheckIDChanging(value);
				this.SendPropertyChanging();
				this._PaycheckID = value;
				this.SendPropertyChanged("PaycheckID");
				this.OnPaycheckIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float")]
	public System.Nullable<double> Amount
	{
		get
		{
			return this._Amount;
		}
		set
		{
			if ((this._Amount != value))
			{
				this.OnAmountChanging(value);
				this.SendPropertyChanging();
				this._Amount = value;
				this.SendPropertyChanged("Amount");
				this.OnAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Net", DbType="Float")]
	public System.Nullable<double> Net
	{
		get
		{
			return this._Net;
		}
		set
		{
			if ((this._Net != value))
			{
				this.OnNetChanging(value);
				this.SendPropertyChanging();
				this._Net = value;
				this.SendPropertyChanged("Net");
				this.OnNetChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateTax", DbType="Float")]
	public System.Nullable<double> StateTax
	{
		get
		{
			return this._StateTax;
		}
		set
		{
			if ((this._StateTax != value))
			{
				this.OnStateTaxChanging(value);
				this.SendPropertyChanging();
				this._StateTax = value;
				this.SendPropertyChanged("StateTax");
				this.OnStateTaxChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FederalTax", DbType="Float")]
	public System.Nullable<double> FederalTax
	{
		get
		{
			return this._FederalTax;
		}
		set
		{
			if ((this._FederalTax != value))
			{
				this.OnFederalTaxChanging(value);
				this.SendPropertyChanging();
				this._FederalTax = value;
				this.SendPropertyChanged("FederalTax");
				this.OnFederalTaxChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodEnd", DbType="DateTime")]
	public System.Nullable<System.DateTime> PeriodEnd
	{
		get
		{
			return this._PeriodEnd;
		}
		set
		{
			if ((this._PeriodEnd != value))
			{
				this.OnPeriodEndChanging(value);
				this.SendPropertyChanging();
				this._PeriodEnd = value;
				this.SendPropertyChanged("PeriodEnd");
				this.OnPeriodEndChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PAYCHECKS_SESSIONS", Storage="_Sessions", ThisKey="PaycheckID", OtherKey="Paycheck", DeleteRule="CASCADE")]
	public EntitySet<Sessions> Sessions
	{
		get
		{
			return this._Sessions;
		}
		set
		{
			this._Sessions.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Sessions(Sessions entity)
	{
		this.SendPropertyChanging();
		entity.Paychecks = this;
	}
	
	private void detach_Sessions(Sessions entity)
	{
		this.SendPropertyChanging();
		entity.Paychecks = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute()]
public partial class Places : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PlaceID;
	
	private string _Name;
	
	private string _Address;
	
	private string _City;
	
	private string _State;
	
	private System.Nullable<int> _Zip;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlaceIDChanging(int value);
    partial void OnPlaceIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipChanging(System.Nullable<int> value);
    partial void OnZipChanged();
    #endregion
	
	public Places()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int PlaceID
	{
		get
		{
			return this._PlaceID;
		}
		set
		{
			if ((this._PlaceID != value))
			{
				this.OnPlaceIDChanging(value);
				this.SendPropertyChanging();
				this._PlaceID = value;
				this.SendPropertyChanged("PlaceID");
				this.OnPlaceIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50)")]
	public string City
	{
		get
		{
			return this._City;
		}
		set
		{
			if ((this._City != value))
			{
				this.OnCityChanging(value);
				this.SendPropertyChanging();
				this._City = value;
				this.SendPropertyChanged("City");
				this.OnCityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(2)")]
	public string State
	{
		get
		{
			return this._State;
		}
		set
		{
			if ((this._State != value))
			{
				this.OnStateChanging(value);
				this.SendPropertyChanging();
				this._State = value;
				this.SendPropertyChanged("State");
				this.OnStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="Int")]
	public System.Nullable<int> Zip
	{
		get
		{
			return this._Zip;
		}
		set
		{
			if ((this._Zip != value))
			{
				this.OnZipChanging(value);
				this.SendPropertyChanging();
				this._Zip = value;
				this.SendPropertyChanged("Zip");
				this.OnZipChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute()]
public partial class Routes : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _RouteID;
	
	private string _Name;
	
	private System.Nullable<int> _FromPlace;
	
	private System.Nullable<int> _ToPlace;
	
	private System.Nullable<double> _Miles;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRouteIDChanging(int value);
    partial void OnRouteIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFromPlaceChanging(System.Nullable<int> value);
    partial void OnFromPlaceChanged();
    partial void OnToPlaceChanging(System.Nullable<int> value);
    partial void OnToPlaceChanged();
    partial void OnMilesChanging(System.Nullable<double> value);
    partial void OnMilesChanged();
    #endregion
	
	public Routes()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int RouteID
	{
		get
		{
			return this._RouteID;
		}
		set
		{
			if ((this._RouteID != value))
			{
				this.OnRouteIDChanging(value);
				this.SendPropertyChanging();
				this._RouteID = value;
				this.SendPropertyChanged("RouteID");
				this.OnRouteIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromPlace", DbType="Int")]
	public System.Nullable<int> FromPlace
	{
		get
		{
			return this._FromPlace;
		}
		set
		{
			if ((this._FromPlace != value))
			{
				this.OnFromPlaceChanging(value);
				this.SendPropertyChanging();
				this._FromPlace = value;
				this.SendPropertyChanged("FromPlace");
				this.OnFromPlaceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToPlace", DbType="Int")]
	public System.Nullable<int> ToPlace
	{
		get
		{
			return this._ToPlace;
		}
		set
		{
			if ((this._ToPlace != value))
			{
				this.OnToPlaceChanging(value);
				this.SendPropertyChanging();
				this._ToPlace = value;
				this.SendPropertyChanged("ToPlace");
				this.OnToPlaceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Miles", DbType="Float")]
	public System.Nullable<double> Miles
	{
		get
		{
			return this._Miles;
		}
		set
		{
			if ((this._Miles != value))
			{
				this.OnMilesChanging(value);
				this.SendPropertyChanging();
				this._Miles = value;
				this.SendPropertyChanged("Miles");
				this.OnMilesChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute()]
public partial class Sessions : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SessionID;
	
	private System.Nullable<System.DateTime> _Date;
	
	private System.Nullable<int> _Client;
	
	private System.Nullable<double> _Duration;
	
	private System.Nullable<double> _PayRate;
	
	private System.Nullable<double> _AmountEarned;
	
	private System.Nullable<int> _Route;
	
	private System.Nullable<int> _Paycheck;
	
	private EntityRef<Paychecks> _Paychecks;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSessionIDChanging(int value);
    partial void OnSessionIDChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnClientChanging(System.Nullable<int> value);
    partial void OnClientChanged();
    partial void OnDurationChanging(System.Nullable<double> value);
    partial void OnDurationChanged();
    partial void OnPayRateChanging(System.Nullable<double> value);
    partial void OnPayRateChanged();
    partial void OnAmountEarnedChanging(System.Nullable<double> value);
    partial void OnAmountEarnedChanged();
    partial void OnRouteChanging(System.Nullable<int> value);
    partial void OnRouteChanged();
    partial void OnPaycheckChanging(System.Nullable<int> value);
    partial void OnPaycheckChanged();
    #endregion
	
	public Sessions()
	{
		this._Paychecks = default(EntityRef<Paychecks>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SessionID
	{
		get
		{
			return this._SessionID;
		}
		set
		{
			if ((this._SessionID != value))
			{
				this.OnSessionIDChanging(value);
				this.SendPropertyChanging();
				this._SessionID = value;
				this.SendPropertyChanged("SessionID");
				this.OnSessionIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Client", DbType="Int")]
	public System.Nullable<int> Client
	{
		get
		{
			return this._Client;
		}
		set
		{
			if ((this._Client != value))
			{
				this.OnClientChanging(value);
				this.SendPropertyChanging();
				this._Client = value;
				this.SendPropertyChanged("Client");
				this.OnClientChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Float")]
	public System.Nullable<double> Duration
	{
		get
		{
			return this._Duration;
		}
		set
		{
			if ((this._Duration != value))
			{
				this.OnDurationChanging(value);
				this.SendPropertyChanging();
				this._Duration = value;
				this.SendPropertyChanged("Duration");
				this.OnDurationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayRate", DbType="Float")]
	public System.Nullable<double> PayRate
	{
		get
		{
			return this._PayRate;
		}
		set
		{
			if ((this._PayRate != value))
			{
				this.OnPayRateChanging(value);
				this.SendPropertyChanging();
				this._PayRate = value;
				this.SendPropertyChanged("PayRate");
				this.OnPayRateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountEarned", DbType="Float")]
	public System.Nullable<double> AmountEarned
	{
		get
		{
			return this._AmountEarned;
		}
		set
		{
			if ((this._AmountEarned != value))
			{
				this.OnAmountEarnedChanging(value);
				this.SendPropertyChanging();
				this._AmountEarned = value;
				this.SendPropertyChanged("AmountEarned");
				this.OnAmountEarnedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Route", DbType="Int")]
	public System.Nullable<int> Route
	{
		get
		{
			return this._Route;
		}
		set
		{
			if ((this._Route != value))
			{
				this.OnRouteChanging(value);
				this.SendPropertyChanging();
				this._Route = value;
				this.SendPropertyChanged("Route");
				this.OnRouteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paycheck", DbType="Int")]
	public System.Nullable<int> Paycheck
	{
		get
		{
			return this._Paycheck;
		}
		set
		{
			if ((this._Paycheck != value))
			{
				if (this._Paychecks.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPaycheckChanging(value);
				this.SendPropertyChanging();
				this._Paycheck = value;
				this.SendPropertyChanged("Paycheck");
				this.OnPaycheckChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PAYCHECKS_SESSIONS", Storage="_Paychecks", ThisKey="Paycheck", OtherKey="PaycheckID", IsForeignKey=true)]
	public Paychecks Paychecks
	{
		get
		{
			return this._Paychecks.Entity;
		}
		set
		{
			Paychecks previousValue = this._Paychecks.Entity;
			if (((previousValue != value) 
						|| (this._Paychecks.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Paychecks.Entity = null;
					previousValue.Sessions.Remove(this);
				}
				this._Paychecks.Entity = value;
				if ((value != null))
				{
					value.Sessions.Add(this);
					this._Paycheck = value.PaycheckID;
				}
				else
				{
					this._Paycheck = default(Nullable<int>);
				}
				this.SendPropertyChanged("Paychecks");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
